version: '3.4'

networks:
  kong-net:
    driver: bridge
  keycloak-net:

volumes:
  kong-datastore:
    driver: local
  keycloak-datastore:
    driver: local

services:
  kong-db:
    image: postgres:11-alpine
    container_name: kong-db
    volumes:
      - ./kong-datastore:/var/lib/postgresql/data
    networks:
      - kong-net
    ports:
      - "15432:5432"
    environment:
      POSTGRES_DB:       api-gw
      POSTGRES_USER:     kong
      POSTGRES_PASSWORD: kong
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "kong"]
      interval: 5s
      timeout: 5s
      retries: 5

  kong-migrations:
    image: kong-oidc:latest
    container_name: kong-migrations
    restart: on-failure
    command: kong migrations bootstrap -v
    networks:
      - kong-net
    environment:
      - KONG_PG_HOST=kong-db
      - KONG_DATABASE=postgres
      - KONG_PG_USER=kong
      - KONG_PG_PASSWORD=kong
      - KONG_PG_DATABASE=api-gw
      - KONG_PLUGINS=bundled,oidc

  kong:
    build:
      context: ./
    image: kong-oidc:latest
    restart: always
    container_name: kong
    depends_on:
      kong-db:
        condition: service_healthy
      kong-migrations:
        condition: service_started
    networks:
      - kong-net
    ports:
      - "8000:8000" # Listener
      - "8001:8001" # Admin API
      - "8443:8443" # Listener  (SSL)
      - "8444:8444" # Admin API (SSL)
    environment:
      KONG_DATABASE:         postgres
      KONG_PG_HOST:          kong-db
      KONG_PG_PORT:          5432
      KONG_PG_DATABASE:      api-gw
      KONG_PG_USER:          kong
      KONG_PG_PASSWORD:      kong
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG:  /dev/stderr
      KONG_ADMIN_ERROR_LOG:  /dev/stderr
      KONG_PROXY_LISTEN:     0.0.0.0:8000, 0.0.0.0:8443 ssl
      KONG_ADMIN_LISTEN:     0.0.0.0:8001, 0.0.0.0:8444 ssl
      KONG_PLUGINS:          bundled,oidc
      KONG_LOG_LEVEL:        debug

  konga:
    image: pantsel/konga:0.14.9
    container_name: konga
    depends_on:
      kong:
        condition: service_healthy
    networks:
      - kong-net
    ports:
      - "1337:1337" # konga
    environment:
      DB_ADAPTER: postgres
      DB_HOST: kong-db
      DB_PORT: '5432'
      DB_USER: kong
      DB_PASSWORD: kong
      DB_DATABASE: api-gw
      NODE_ENV: development

  keycloak-db:
    image: postgres:14-alpine
    volumes:
      - ./keycloak-datastore:/var/lib/postgresql/data
    networks:
      - keycloak-net
    ports:
      - "25432:5432"
    environment:
      POSTGRES_DB:       keycloak
      POSTGRES_USER:     keycloak
      POSTGRES_PASSWORD: password

  keycloak:
    image: quay.io/keycloak/keycloak:19.0.0
    container_name: keycloak
    depends_on:
      - keycloak-db
    command: start-dev
    networks:
      - keycloak-net
    ports:
      - "8180:8080"
    environment:
      DB_VENDOR:   POSTGRES
      DB_ADDR:     keycloak-db
      DB_PORT:     5432
      DB_DATABASE: keycloak
      DB_USER:     keycloak
      DB_PASSWORD: password
      KEYCLOAK_ADMIN:     admin
      KEYCLOAK_ADMIN_PASSWORD: admin

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    depends_on:
      - kong
    container_name: prometheus
    networks:
      - kong-net
    restart: always
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command: "--config.file=/etc/prometheus/prometheus.yml --storage.tsdb.path=/prometheus"
    ports:
      - 9090:9090

  grafana:
    image: grafana/grafana
    container_name: grafana
    depends_on:
      - prometheus
    container_name: grafana
    networks:
      - kong-net
    restart: always
    volumes:
      - ./grafana/provisioning/:/etc/grafana/provisioning
    ports:
      - 3000:3000
